"""–§—É–Ω–∫—Ü–∏—è sort_priority() üå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é sort_priority(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:
    values ‚Äî —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª
    group ‚Äî —Å–ø–∏—Å–æ–∫, –∫–æ—Ä—Ç–µ–∂ –∏–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª
–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –Ω–µ—É–±—ã–≤–∞–Ω–∏—é —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª values,
–¥–µ–ª–∞—è –ø—Ä–∏ —ç—Ç–æ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—É —á–∏—Å–µ–ª –∏–∑ group, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ —Å–ª–µ–¥–æ–≤–∞—Ç—å –ø–µ—Ä–≤–æ–π.
"""


def sort_priority(values, group):
    def comparator(elem):
        if elem in group:
            return 0, elem
        return 1, elem
    values.sort(key=comparator)


numbers = [9, 8, 7, 6, 5, 4, 3, 2, 1]
sort_priority(numbers, (300, 100, 200))
assert numbers == [1, 2, 3, 4, 5, 6, 7, 8, 9], '–†–µ—à–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π!'
print(numbers)


numbers = [8, 3, 1, 2, 5, 4, 7, 6]
group = {5, 7, 2, 3}
sort_priority(numbers, group)
assert numbers == [2, 3, 5, 7, 1, 4, 6, 8], '–†–µ—à–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π!'
print(numbers)
