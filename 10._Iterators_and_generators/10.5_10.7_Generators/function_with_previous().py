"""Функция with_previous()
Реализуйте генераторную функцию, которая принимает один аргумент:
iterable — итерируемый объект
Функция должна возвращать генератор, порождающий последовательность кортежей, каждый из которых содержит
очередной элемент итерируемого объекта iterable, а также предшествующий ему элемент:
(<очередной элемент>, <предыдущий элемент>)
Для первого элемента предыдущим считается значение None.
Примечание 1. Элементы итерируемого объекта в возвращаемом функцией генераторе должны располагаться
в своем исходном порядке.
Примечание 2. Гарантируется, что итерируемый объект, передаваемый в функцию, не является множеством.
"""


def with_previous(iterable: iter):
    previous = None
    for elem in iterable:
        yield elem, previous
        previous = elem


numbers = [1, 2, 3, 4, 5]
print(*with_previous(numbers))  # (1, None) (2, 1) (3, 2) (4, 3) (5, 4)

iterator = iter('stepik')
print(*with_previous(iterator))  # ('s', None) ('t', 's') ('e', 't') ('p', 'e') ('i', 'p') ('k', 'i')
